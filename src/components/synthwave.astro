---
// Import any necessary Astro components or global styles here if needed
import Starfield from "~/components/starfield.astro";
import GitHubCorner from "./github-corner.astro";
import '../styles/scene.scss'; // Your CSS file path if it's separate
import sceneScript from '../scripts/scene.js';

---
<Starfield/>
<GitHubCorner />
<container class="scene-container">
  <div class="scene">
        <div class="delorean">
            <div class="mirror-left"></div>
            <div class="mirror-right"></div>
            <div class="delorean-cases">
                <div class="wheel-case-left"></div>
                <div class="wheel-case-right"></div>
                <div class="wheel-left"></div>
                <div class="wheel-right"></div>
            </div>
            <div class="delorean-top">
                <div class="top-lines-on-top"></div>
                <div class="top-lines-on-top right"></div>
                <div class="rear-window"></div>
                <div class="lights">
                    <div class="lights-frame"></div>
                    <div class="red-light-left"></div>
                    <div class="red-light-right"></div>
                    <div class="id-container">
                        <div class="id"></div>
                    </div>
                    <div class="red-reflection"></div>
                </div>
                <div class="bumper-light-reflection"></div>
                <div class="bumper-light-reflection right"></div>
            </div>
            <div class="bumper">
                <div class="bumper-reflection"></div>
                <div class="bumper-logo"></div>
                <div class="bumper-hole-1"></div>
                <div class="bumper-hole-2"></div>
                <div class="bumper-sticker"></div>
                <div class="dashes"></div>
            </div>
            <div class="shadow"></div>
        </div>

        <div class="top">
            <div class="startails">
                <div class="startail-r"></div>
                <div class="startail-l"></div>
                <div class="startail-m"></div>
            </div>
            <div class="top-lines"></div>
            <div class="brand">
                <div class="triangle"></div>
                <div class="kode-text"></div>
            </div>
            <div class="sun"></div>
            <div class="palm small">
                <div class="trunk"></div>
                <div class="trunk-bottom"></div>
                <div class="leaf-1"></div>
                <div class="leaf-1-s"></div>
                <div class="leaf-2"></div>
                <div class="leaf-2-s"></div>
                <div class="leaf-3"></div>
                <div class="leaf-3-s"></div>
            </div>
            <div class="palm">
                <div class="trunk"></div>
                <div class="trunk-bottom"></div>
                <div class="leaf-1"></div>
                <div class="leaf-1-s"></div>
                <div class="leaf-2"></div>
                <div class="leaf-2-s"></div>
                <div class="leaf-3"></div>
                <div class="leaf-3-s"></div>
            </div>
        </div>

        <div class="bottom">
            <div class="m0"></div>
            <div class="m1"></div>
            <div class="m2"></div>
            <div class="bottom-overlay"></div>
        </div>

        <div id="stars"></div>
    </div>

    <audio id="synthwave-track" loop>
        <source src="https://assets.codepen.io/907471/synthwave-80s-110045.mp3" type="audio/mp3">
    </audio>

    <button id="volume">
        <svg xmlns="http://www.w3.org/2000/svg" width="21.25" height="17.5" viewBox="0 0 21.25 17.5" class="play">
            <path d="M1.25-11.25v7.5h5l5.625,5H13.75v-17.5H11.875l-5.625,5Zm16,6.75a3.745,3.745,0,0,0,1.5-3,3.745,3.745,0,0,0-1.5-3L16.125-9a1.87,1.87,0,0,1,.75,1.5,1.87,1.87,0,0,1-.75,1.5Zm2.25,3a7.491,7.491,0,0,0,3-6,7.491,7.491,0,0,0-3-6L18.375-12a5.615,5.615,0,0,1,2.25,4.5A5.615,5.615,0,0,1,18.375-3L19.5-1.5Z" transform="translate(-1.25 16.25)" fill="var(--labs-sys-color-volume)"/>
        </svg>
        <svg xmlns="http://www.w3.org/2000/svg" width="24.996" height="19.992" viewBox="0 0 24.996 19.992" class="muted">
            <path d="M1.891-16.922,1.148-17.5,0-16.016l.742.574L23.105,1.922l.742.574L25,1.016,24.254.441,21.238-1.9A7.48,7.48,0,0,0,23.75-7.5a7.491,7.491,0,0,0-3-6L19.625-12a5.615,5.615,0,0,1,2.25,4.5,5.611,5.611,0,0,1-2.152,4.426L15-6.742V-16.25H13.125l-4.836,4.3-6.4-4.969ZM2.5-11.25v7.5h5l5.625,5H15V-1.934L3.172-11.25H2.5Zm16,6.75a3.745,3.745,0,0,0,1.5-3,3.745,3.745,0,0,0-1.5-3L17.375-9a1.87,1.87,0,0,1,.75,1.5,1.87,1.87,0,0,1-.75,1.5Z" transform="translate(0 17.496)" fill="var(--labs-sys-color-volume)"/>
        </svg>
    </button>
</container>

<script>document.addEventListener("DOMContentLoaded", () => {
  const getRandomInt = (min, max) => {
    min = Math.ceil(min);
    max = Math.floor(max);
    return Math.floor(Math.random() * (max - min) + min); // The maximum is exclusive and the minimum is inclusive
  };
  const stars = document.getElementById("stars");
  const render = () => {
    // Create stars âœ¨
    stars.innerHTML = ""; // Now this should work
    const w = window.innerWidth;
    const h = window.innerHeight;
    const starCount = getRandomInt(42, 100);
    for (let i = 0; i < starCount; i++) {
      const star = document.createElement("div");
      star.classList.add("star");
      const x = getRandomInt(0, w);
      const y = getRandomInt(0, h);
      star.style.setProperty("--x", `${x}px`);
      star.style.setProperty("--y", `${y}px`);
      stars.appendChild(star);
    }
  };
  requestAnimationFrame(render);
  const volume = document.getElementById("volume");
  const audio = document.getElementById("synthwave-track");
  const volumeToggle = () => {
    if (volume.classList.contains("playing")) {
      volume.classList.remove("playing");
      audio.pause();
    } else {
      volume.classList.add("playing");
      audio.play();
    }
  };
  volume.addEventListener("pointerdown", () => volumeToggle()); // Now this should work
  volume.addEventListener("keydown", (e) => {
    if (e.code === "Space" || e.code === "Enter") {
      volumeToggle();
    }
  });
  window.addEventListener("resize", () => requestAnimationFrame(render));
});
</script>